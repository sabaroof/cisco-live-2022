- name: Apply a portgroup to the production VM
  community.vmware.vmware_guest_network:
    hostname: '{{ vc_host }}'
    username: '{{ vc_creds.user }}'
    password: '{{ vc_creds.pass }}'
    datacenter: '{{ vc_datacenter }}'
    name: '{{ vc_prodvm }}'
    mac_address: '{{ vc_prodvm_mac }}'
    network_name: '{{ vc_pg }}'
    state: present
    validate_certs: no

- name: Apply a portgroup to the test VM
  community.vmware.vmware_guest_network:
    hostname: "{{ vc_host }}"
    username: '{{ vc_creds.user }}'
    password: '{{ vc_creds.pass }}'
    datacenter: "{{ vc_datacenter }}"
    name: '{{ vc_testvm }}'
    mac_address: '{{ vc_testvm_mac }}'
    network_name: '{{ vc_pg }}'
    state: present
    validate_certs: no

- name: Pull an image
  community.docker.docker_image:
    name: sabaroof/ciscolive2022:singlepage
    source: pull
    docker_host: tcp://198.19.202.5:2375
    validate_certs: no

- name: Create a docker network
  community.docker.docker_network:
    name: singlepage_net
    ipam_config:
      - subnet: 30.0.1.0/24
        gateway: 30.0.1.1
    driver: ipvlan
    driver_options:
      parent: '{{ vc_prodvm_int }}'
      mode: l2
    docker_host: tcp://198.19.202.5:2375
    validate_certs: no

- name: Run the container
  community.docker.docker_container:
    name: singlepage
    image: sabaroof/ciscolive2022:singlepage
    state: started
    command: ["nginx", "-g", "'daemon off;'"]
    ports:
      - "80:80"
    networks:
      - name: singlepage_net
        ipv4_address: 30.0.1.10
    docker_host: tcp://198.19.202.5:2375
    validate_certs: no
